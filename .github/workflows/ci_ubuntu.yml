name: bandersnatch_ci_ubuntu

on:
  push:
    branches:
      - main
  pull_request:

concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.sha }}
  cancel-in-progress: true

jobs:
  build:
    name: bandersnatch CI python ${{ matrix.python-version }} on ${{matrix.os}}

    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        python-version: ["3.10", "3.11"]
        os: [ubuntu-latest]

    steps:
    - uses: actions/checkout@v4

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}

    - name: Setup minio
      run: |
          docker run -d -p 9000:9000 --name minio \
                     -e "MINIO_ACCESS_KEY=minioadmin" \
                     -e "MINIO_SECRET_KEY=minioadmin" \
                     -v '/tmp/data:/data' \
                     -v '/tmp/config:/root/.minio' \
                     minio/minio server /data

          export AWS_ACCESS_KEY_ID=minioadmin
          export AWS_SECRET_ACCESS_KEY=minioadmin
          export AWS_EC2_METADATA_DISABLED=true

    - name: Install latest pip, setuptools + tox
      run: |
        python -m pip install --upgrade pip setuptools tox

    - name: Install base bandersnatch requirements
      run: |
        python -m pip install -r requirements.txt

    - name: Run Unittests
      env:
        TOXENV: py3
        os: ${{ matrix.os }}
      run: |
        python test_runner.py

    - name: Upload coverage to Codecov
      # If pushed / is a pull request against main repo.
      if: (github.event_name == 'push' && github.repository == 'pypa/bandersnatch') || (github.event.pull_request.base.repo.full_name == 'pypa/bandersnatch')
      uses: codecov/codecov-action@v4
      env:
        OS: ${{ matrix.os }}
        PYTHON: ${{ matrix.python-version }}
      with:
        env_vars: OS,PYTHON

    - name: Run Integration Test
      env:
       TOXENV: INTEGRATION
      run: |
        python -m pip install .
        python test_runner.py

    - name: Run Integration Test (uvloop)
      env:
       TOXENV: INTEGRATION
      run: |
        python -m pip install .[uvloop]
        python test_runner.py
